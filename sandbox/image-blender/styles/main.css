@import url('./variables.css');

* {
    position: relative;
    box-sizing: border-box;
}

body {
    margin: 0;
    padding: var(--gutter);
    min-height: calc(100 * var(--vh));
    font-family: sans-serif;
}

.input {
    display: flex;
    justify-content: center;
}

.input__label {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    padding: var(--gutter);
    width: 100%;
    height: 100%;
    max-width: 600px;
    max-height: 400px;
    border: 4px dashed blueviolet;
    transition: border-color var(--anim-dur);
}

.input__label.active {
    border-color: springgreen;
}

.input__label::after {
    content: 'Drag image here or click to select...';
}

.input__input {
    display: none;
}

.output {
    display: flex;
    flex-direction: row;
    align-items: start;
    column-gap: var(--gutter);
}

.output__controls {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: start;
    justify-content: center;
    column-gap: var(--gutter);
    row-gap: var(--gutter);
}

.controls__filter>div {
    display: flex;
    flex-wrap: wrap;
    column-gap: var(--gutter);
}

.controls__filter details {
    min-width: 140px;
}

.controls__filter range {
    width: 124px;
}

.output__canvas {
    height: calc(50 * var(--vh));
}

.output__canvas canvas {
    height: 100%;
}

.hidden {
    display: none;
}

@media (max-width: 768px) {
    .output {
        flex-direction: column;
        align-items: center;
        column-gap: unset;
        row-gap: var(--gutter);
    }

    .output__controls {
        align-items: center;
    }

    .controls__filter>div {
        justify-content: center;
    }
}

@media (max-width: 400px) {
    .output {
        flex-direction: column-reverse;
    }

    .output__controls {
        position: absolute;
        top: var(--gutter);
        left: 0;
        padding: var(--gutter);
        background-color: rgba(255, 255, 255, 0.6);
        z-index: 1;
        transform: translateY(calc(-100% + var(--gutter)));
        transition: transform var(--anim-dur);
    }

    #toggleControls:checked~.container .output__controls {
        transform: translateY(var(--gutter));
    }

    .output__toggle--controls {
        cursor: pointer;
    }

    .output__toggle--controls::after {
        content: attr(data-label-open);
    }

    #toggleControls:checked~.container .output__toggle--controls::after {
        content: attr(data-label-close);
    }

    .output__canvas {
        transform: translateY(calc(2 * var(--gutter)));
        transition: transform var(--anim-dur);
    }
}