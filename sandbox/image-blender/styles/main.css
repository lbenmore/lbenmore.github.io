@import url('./variables.css');

* {
    position: relative;
    box-sizing: border-box;
    font: inherit;
    color: inherit;
}

*:active,
*:focus {
    outline-color: var(--acc-primary);
}

body {
    margin: 0;
    padding: var(--gutter);
    min-height: calc(100 * var(--vh));
    background-color: var(--bg-primary);
    font-family: sans-serif;
    font-size: 16px;
    font-weight: 300;
    color: var(--fg-primary);
    letter-spacing: 0.02em;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-smoothing: antialiased;
}

.input {
    display: flex;
    justify-content: center;
}

.input__label {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    padding: var(--gutter);
    width: 100%;
    height: 100%;
    max-width: 600px;
    max-height: 400px;
    border: 1px dashed var(--acc-primary);
    will-change: border-color;
    transition: border-color var(--anim-dur);
}

.input__label.active {
    border-color: var(--acc-secondary);
}

.input__label::after {
    content: 'Drag image here or click to select...';
}

.input__input {
    display: none;
}

.output {
    display: flex;
    flex-direction: row;
    align-items: start;
    column-gap: var(--gutter);
}

.output__controls {
    display: flex;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: start;
    justify-content: center;
    column-gap: var(--gutter);
    row-gap: var(--gutter);
    width: 50%;
}

.controls__filter > div {
    display: flex;
    flex-wrap: wrap;
    align-items: flex-start;
    column-gap: var(--gutter);
    row-gap: var(--gutter);
}

.controls__filter details {
    flex-grow: 1;
    flex-basis: 140px;
    /* min-width: 140px; */
    border: 1px solid var(--acc-primary);
    border-radius: var(--half-gutter);
    padding: calc(var(--gutter) / 2);
}

.controls__filter details::before,
.controls__filter details::after {
    content: '';
    position: absolute;
    top: var(--half-gutter);
    right: 4px;
    width: var(--gutter);
    height: var(--gutter);
    border-radius: var(--half-gutter);
    pointer-events: none;
}

.controls__filter details::before {
    background-color: #888;
    width: 32px;
    will-change: background-color;
    transition: background-color var(--anim-dur);
}

.controls__filter details::after {
    background-color: white;
    filter: drop-shadow(0 0 2px #888);
    will-change: transform;
    transform: translateX(-100%);
    transition: transform var(--anim-dur);
}

.controls__filter details[open]::before {
    background-color: var(--acc-secondary);
}

.controls__filter details[open]::after {
    transform: translateX(0);
}

.controls__filter summary {
    appearance: none;
    list-style: none;
}

.controls__filter range {
    width: 124px;
}

.controls__label {
    display: flex;
    column-gap: var(--gutter);
    align-items: center;
}

.controls__select {
    align-self: stretch;
}

.controls__select select {
    flex-grow: 1;
    padding: calc(var(--gutter) / 2);
    background-color: var(--bg-primary);
    border: 1px solid var(--acc-primary);
    border-radius: calc(var(--gutter) / 2);
    appearance: none;
}

.controls__select::before,
.controls__select::after {
    content: '';
    position: absolute;
    top: 20px;
    right: var(--half-gutter);
    width: var(--half-gutter);
    height: 1px;
    background-color: var(--acc-primary);
}

.controls__select::before {
    z-index: 1;
    transform-origin: right center;
    transform: translateX(-100%) rotateZ(45deg);
}

.controls__select::after {
    transform-origin: left center;
    transform: rotateZ(-45deg);
}

.output__canvas {
    width: 50%;
}

.output__canvas canvas {
    width: 100%;
}

.output__button {
    align-self: center;
    padding: var(--gutter);
    background-color: transparent;
    border: 1px solid var(--acc-primary);
    border-radius: var(--half-gutter);
    color: var(--acc-primary);
    cursor: pointer;
    overflow: hidden;
    will-change: color;
    transition: color var(--anim-dur);
}

.output__button:hover {
    color: var(--white);
}

.output__button::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--acc-primary);
    will-change: transform;
    transform-origin: right center;
    transform: scaleX(0);
    transition: transform var(--anim-dur);
}

.output__button:hover::before {
    transform-origin: left center;
    transform: scaleX(1);
}

.output__button:active {
    transition-duration: 0.1s;
    transform: scale(0.95);
}

.hidden {
    display: none;
}

@media (max-width: 768px) {
    .output {
        flex-direction: column;
        align-items: center;
        column-gap: unset;
        row-gap: var(--gutter);
    }

    .output__controls {
        align-items: center;
    }

    .controls__filter > div {
        justify-content: center;
    }
}

@media (max-width: 400px) {
    .output {
        flex-direction: column-reverse;
    }

    .output__controls {
        position: absolute;
        top: var(--gutter);
        left: 0;
        padding: var(--gutter);
        width: 100%;
        z-index: 1;
        will-change: transform;
        transform: translateY(calc(-100% + var(--gutter)));
        transition: transform var(--anim-dur);
    }

    .output__controls::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: var(--bg-primary);
        opacity: 0.67;
    }

    #toggleControls:checked~.container .output__controls {
        transform: translateY(var(--gutter));
    }

    .output__toggle--controls {
        cursor: pointer;
    }

    .output__toggle--controls::after {
        content: attr(data-label-open);
    }

    #toggleControls:checked~.container .output__toggle--controls::after {
        content: attr(data-label-close);
    }

    .output__canvas {
        width: 100%;
        will-change: transform;
        transform: translateY(calc(2 * var(--gutter)));
        transition: transform var(--anim-dur);
    }
}

@media (prefers-color-scheme: dark) {
    .output__button {
        color: var(--fg-primary);
    }
}